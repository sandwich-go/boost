// Code generated by optiongen. DO NOT EDIT.
// optiongen: github.com/timestee/optiongen

package xos

import "os"

// CopyOptions should use NewCopyOptions to initialize it
type CopyOptions struct {
	// OnSymlink can specify what to do on symlink
	OnSymlink func(src string) SymlinkAction
	// Skip can specify which files should be skipped
	Skip func(src string) (bool, error)
	// AddPermission to every entities,
	AddPermission os.FileMode
	// Sync file after copy.
	Sync bool
}

// NewCopyOptions new CopyOptions
func NewCopyOptions(opts ...CopyOption) *CopyOptions {
	cc := newDefaultCopyOptions()
	for _, opt := range opts {
		opt(cc)
	}
	if watchDogCopyOptions != nil {
		watchDogCopyOptions(cc)
	}
	return cc
}

// ApplyOption apply mutiple new option
func (cc *CopyOptions) ApplyOption(opts ...CopyOption) {
	for _, opt := range opts {
		opt(cc)
	}
}

// CopyOption option func
type CopyOption func(cc *CopyOptions)

// WithOnSymlink option func for filed OnSymlink
func WithOnSymlink(v func(src string) SymlinkAction) CopyOption {
	return func(cc *CopyOptions) {
		cc.OnSymlink = v
	}
}

// WithSkip option func for filed Skip
func WithSkip(v func(src string) (bool, error)) CopyOption {
	return func(cc *CopyOptions) {
		cc.Skip = v
	}
}

// WithAddPermission option func for filed AddPermission
func WithAddPermission(v os.FileMode) CopyOption {
	return func(cc *CopyOptions) {
		cc.AddPermission = v
	}
}

// WithSync option func for filed Sync
func WithSync(v bool) CopyOption {
	return func(cc *CopyOptions) {
		cc.Sync = v
	}
}

// InstallCopyOptionsWatchDog the installed func will called when NewCopyOptions  called
func InstallCopyOptionsWatchDog(dog func(cc *CopyOptions)) { watchDogCopyOptions = dog }

// watchDogCopyOptions global watch dog
var watchDogCopyOptions func(cc *CopyOptions)

// newDefaultCopyOptions new default CopyOptions
func newDefaultCopyOptions() *CopyOptions {
	cc := &CopyOptions{}

	for _, opt := range [...]CopyOption{
		WithOnSymlink(func(src string) SymlinkAction {
			return Shallow
		}),
		WithSkip(func(src string) (bool, error) {
			return false, nil
		}),
		WithAddPermission(0),
		WithSync(false),
	} {
		opt(cc)
	}

	return cc
}

// all getter func
func (cc *CopyOptions) GetOnSymlink() func(src string) SymlinkAction { return cc.OnSymlink }
func (cc *CopyOptions) GetSkip() func(src string) (bool, error)      { return cc.Skip }
func (cc *CopyOptions) GetAddPermission() os.FileMode                { return cc.AddPermission }
func (cc *CopyOptions) GetSync() bool                                { return cc.Sync }

// CopyOptionsVisitor visitor interface for CopyOptions
type CopyOptionsVisitor interface {
	GetOnSymlink() func(src string) SymlinkAction
	GetSkip() func(src string) (bool, error)
	GetAddPermission() os.FileMode
	GetSync() bool
}

// CopyOptionsInterface visitor + ApplyOption interface for CopyOptions
type CopyOptionsInterface interface {
	CopyOptionsVisitor
	ApplyOption(...CopyOption)
}
