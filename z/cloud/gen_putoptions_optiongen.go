// Code generated by optiongen. DO NOT EDIT.
// optiongen: github.com/timestee/optiongen

package cloud

// PutOptions should use NewPutOptions to initialize it
type PutOptions struct {
	// annotation@ContentType(comment="上传文件的类型")
	ContentType string
	// annotation@ContentDisposition(comment="上传文件的内容描述")
	ContentDisposition string
	// annotation@CacheControl(comment="上传文件的缓存控制")
	CacheControl string
}

// NewPutOptions new PutOptions
func NewPutOptions(opts ...PutOption) *PutOptions {
	cc := newDefaultPutOptions()
	for _, opt := range opts {
		opt(cc)
	}
	if watchDogPutOptions != nil {
		watchDogPutOptions(cc)
	}
	return cc
}

// ApplyOption apply multiple new option
func (cc *PutOptions) ApplyOption(opts ...PutOption) {
	for _, opt := range opts {
		opt(cc)
	}
}

// PutOption option func
type PutOption func(cc *PutOptions)

// WithContentType 上传文件的类型
func WithContentType(v string) PutOption {
	return func(cc *PutOptions) {
		cc.ContentType = v
	}
}

// WithContentDisposition 上传文件的内容描述
func WithContentDisposition(v string) PutOption {
	return func(cc *PutOptions) {
		cc.ContentDisposition = v
	}
}

// WithCacheControl 上传文件的缓存控制
func WithCacheControl(v string) PutOption {
	return func(cc *PutOptions) {
		cc.CacheControl = v
	}
}

// InstallPutOptionsWatchDog the installed func will called when NewPutOptions  called
func InstallPutOptionsWatchDog(dog func(cc *PutOptions)) { watchDogPutOptions = dog }

// watchDogPutOptions global watch dog
var watchDogPutOptions func(cc *PutOptions)

// newDefaultPutOptions new default PutOptions
func newDefaultPutOptions() *PutOptions {
	cc := &PutOptions{}

	for _, opt := range [...]PutOption{
		WithContentType("application/octet-stream"),
		WithContentDisposition(""),
		WithCacheControl(""),
	} {
		opt(cc)
	}

	return cc
}

// all getter func
func (cc *PutOptions) GetContentType() string        { return cc.ContentType }
func (cc *PutOptions) GetContentDisposition() string { return cc.ContentDisposition }
func (cc *PutOptions) GetCacheControl() string       { return cc.CacheControl }

// PutOptionsVisitor visitor interface for PutOptions
type PutOptionsVisitor interface {
	GetContentType() string
	GetContentDisposition() string
	GetCacheControl() string
}

// PutOptionsInterface visitor + ApplyOption interface for PutOptions
type PutOptionsInterface interface {
	PutOptionsVisitor
	ApplyOption(...PutOption)
}
