// Code generated by tools. DO NOT EDIT.
package geom

import (
	. "github.com/smartystreets/goconvey/convey"
	"testing"
)

func TestRectangleInt8_SnakeRange(t *testing.T) {
	HelixRectRangeFromCenterAndMarginInt8(PtInt8(2, 2), 2, func(p PointInt8) bool {
		t.Log(p.X, p.Y)
		return true
	})

	Convey("test intersection with line", t, func() {
		rect := RectInt8(0, 0, 3, 3)
		So(rect.IntersectionWithLine(PtInt8(1, 0), PtInt8(1, 4)), ShouldBeTrue)  // should be true
		So(rect.IntersectionWithLine(PtInt8(1, 0), PtInt8(1, 3)), ShouldBeTrue)  // should be true
		So(rect.IntersectionWithLine(PtInt8(1, 0), PtInt8(1, 2)), ShouldBeTrue)  // should be true
		So(rect.IntersectionWithLine(PtInt8(1, 0), PtInt8(1, 1)), ShouldBeTrue)  // should be true
		So(rect.IntersectionWithLine(PtInt8(2, 0), PtInt8(2, 2)), ShouldBeTrue)  // should be true
		So(rect.IntersectionWithLine(PtInt8(0, 2), PtInt8(1, 2)), ShouldBeTrue)  // should be true
		So(rect.IntersectionWithLine(PtInt8(0, 1), PtInt8(3, 1)), ShouldBeTrue)  // should be true
		So(rect.IntersectionWithLine(PtInt8(0, 0), PtInt8(0, 1)), ShouldBeFalse) // should be false
		So(rect.IntersectionWithLine(PtInt8(0, 0), PtInt8(0, 2)), ShouldBeFalse) // should be false
		So(rect.IntersectionWithLine(PtInt8(0, 0), PtInt8(0, 3)), ShouldBeFalse) // should be false
		So(rect.IntersectionWithLine(PtInt8(0, 0), PtInt8(0, 4)), ShouldBeFalse) // should be false
		So(rect.IntersectionWithLine(PtInt8(0, 0), PtInt8(1, 0)), ShouldBeFalse) // should be false
		So(rect.IntersectionWithLine(PtInt8(0, 0), PtInt8(2, 0)), ShouldBeFalse) // should be false
		So(rect.IntersectionWithLine(PtInt8(1, 4), PtInt8(2, 4)), ShouldBeFalse) // should be false
		So(rect.IntersectionWithLine(PtInt8(0, 3), PtInt8(3, 3)), ShouldBeFalse) // should be false
		So(rect.IntersectionWithLine(PtInt8(1, 3), PtInt8(2, 4)), ShouldBeFalse) // should be false
	})
}
